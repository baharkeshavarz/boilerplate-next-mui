import type { Metadata } from "next";
import "./globals.css";
import { ChildrenLocalProps } from "@/types";
import { LanguagesType } from "@/configs/languages";
import { languages, LocaleType } from "@/navigation";
import { AppRouterCacheProvider } from "@mui/material-nextjs/v13-appRouter";
import { NextIntlClientProvider, useMessages } from "next-intl";
import HydrationProvider from "@/providers/HydrationProvider";
import CustomThemeProvider from "@/components/CustomThemeProvider";
import { userAgent } from "next/server";
import AppProvider from "@/providers/AppProvider";
import ToastProvider from "@/providers/ToastProvider";
import { headers } from "next/headers";
import { CssBaseline } from "@mui/material";
import RTLProvider from "@/providers/RTLProvider";

export const metadata: Metadata = {
  title: "Sample Project",
  description: "Generated by Bahar Keshavarz",
  icons: {
    icon: "/favicon.ico",
  },
};

export default function RootLayout({ children, params }: ChildrenLocalProps) {
  const lang = params.lang.toString() as LanguagesType;
  const messages = useMessages();
  const reqUserAgent = userAgent({ headers: headers() });

  return (
    <html
      lang={lang}
      dir={languages[params.lang as LocaleType]?.direction ?? "ltr"}
     >
      <body>
        <AppRouterCacheProvider>
          <NextIntlClientProvider messages={messages} locale={params.lang}>
            <HydrationProvider>
               <CustomThemeProvider lang={lang}>
                  <AppProvider userAgent={reqUserAgent}>
                    <ToastProvider />
                    <CssBaseline />
                    <RTLProvider>
                      {children}
                    </RTLProvider>
                  </AppProvider>
               </CustomThemeProvider>
            </HydrationProvider>
          </NextIntlClientProvider>
        </AppRouterCacheProvider>
      </body>
    </html>
  );
}
